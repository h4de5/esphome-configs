substitutions:
  # lichterkette christbaum
  devicename: "esp32_3"
  upper_devicename: "ESP32 3"
  devicecomment: "Wohnzimmer - RGB LED Christbaum + Dimmer + Button"
  number_leds: "64"
  boot_brightness: "50%"
  # TODO: disable on_turn on handler because brightness adc will call it often
  boot_effect: "Color change"

globals:
  - id: current_effect
    type: int
    restore_value: yes
    initial_value: "0"

<<: !include common/esp32-lights.yaml

sensor:
  - platform: adc
    # pin: A0
    # use an ADC1 pin
    pin: GPIO34
    # kein name, da internal
    id: "set_brightness"
    internal: true
    filters:
      - calibrate_linear:
          - 0.0 -> 0.0
          - 3.3 -> 1.0
      - lambda: |-
          return x;
      - delta: 0.05
    attenuation: auto
    update_interval: 200ms
    on_value:
      then:
        if:
          condition:
            light.is_on: WS2812b
          then:
            # - logger.log:
            #     format: "Stored value set to: %.1f"
            #     args: ["id(set_brightness).state"]
            #     level: INFO
            - light.turn_on:
                id: WS2812b
                brightness: !lambda |-
                  return x;
            # - homeassistant.service:
            #    service: light.turn_on
            #    data:
            #      entity_id: light.esp32_3_licht
            #      brightness: !lambda |-
            #        return (int)x;

binary_sensor:
  # light on/off button
  - platform: gpio
    device_class: light
    name: "${devicename} - Button 1"
    id: "button_1"
    pin:
      number: GPIO32
      mode: INPUT_PULLUP
      # inverted: True
    on_press:
      - light.toggle: "WS2812b"

  # light effect switch button
  - platform: gpio
    device_class: light
    name: "${devicename} - Button 2"
    id: "button_2"
    pin:
      number: GPIO25
      mode: INPUT_PULLUP
    on_press:
      - lambda: |-
          auto call = id(WS2812b).turn_on();

          if (id(current_effect) == 0)
            call.set_effect("Random Twinkle");
          else if (id(current_effect) == 1)
            call.set_effect("Random Twinkle 5%");
          else if (id(current_effect) == 2)
            call.set_effect("Random Twinkle 20%");
          else if (id(current_effect) == 3)
            call.set_effect("Random Twinkle 80%");
          else if (id(current_effect) == 4)
            call.set_effect("Scan");
          else if (id(current_effect) == 5)
            call.set_effect("Color Wipe");
          else if (id(current_effect) == 6)
            call.set_effect("Rainbow");
          else if (id(current_effect) == 7)
            call.set_effect("Fireworks");
          else if (id(current_effect) == 8)
            call.set_effect("Christmas");
          else if (id(current_effect) == 9)
            call.set_effect("Color change");
          else if (id(current_effect) == 10)
            call.set_effect("Random shift");
          else if (id(current_effect) == 11)
            call.set_effect("Starry sky");
          else if (id(current_effect) == 12)
            call.set_effect("Candles");
          else if (id(current_effect) == 13)
            call.set_effect("Flicker");
          else {
              call.set_effect("None");
              id(current_effect) = -1;
          }

          id(current_effect) += 1;
          call.perform();
